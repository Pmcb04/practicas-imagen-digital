import cv2
import numpy as np
from matplotlib import pyplot as plt
import MTM


class MatchTemplate:
    def __init__(self):
        pass

    def doMatch(self, img_rgb):
        img_gray = cv2.cvtColor(img_rgb, cv2.COLOR_BGR2GRAY)
        
        
        templates = [('0', cv2.imread('./templates/0.png', 0)), 
		('1', cv2.imread('./templates/1.png', 0)), 
		('2', cv2.imread('./templates/2.png', 0)), 
		('3', cv2.imread('./templates/3.png', 0)), 
        ('4', cv2.imread('./templates/4.png', 0)), 
        ('5', cv2.imread('./templates/5.png', 0)),
        ('6', cv2.imread('./templates/6.png', 0)),
        ('7', cv2.imread('./templates/7.png', 0)),
        ('8', cv2.imread('./templates/8.png', 0)),
        ('9', cv2.imread('./templates/9.png', 0))]
      
        

        res = MTM.matchTemplates(templates, img_gray, method=cv2.TM_CCOEFF_NORMED, N_object=4, score_threshold=0.3,
                                 maxOverlap=0.4, searchBox=None)
        
        print(res)
        img_rgb = MTM.drawBoxesOnRGB(img_rgb, res, boxThickness=2, boxColor=(255, 255, 00), showLabel=True,
                                     labelColor=(255, 255, 0), labelScale=0.5)
        '''for detection in res:
        	(x,y,w,h) = detection.get_xywh()
        
        num = []
        for i in range(len(res)):
            num.append([res['BBox'][i][0], res['TemplateName'][i]])
        num.sort(key=self.sortFirst)'''
        return img_rgb, num

    def sortFirst(self, val):
        return val[0]
